# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
---
# renovate: datasource=docker depName=ghcr.io/siderolabs/installer
talosVersion: v1.6.5
# renovate: datasource=docker depName=ghcr.io/siderolabs/kubelet
kubernetesVersion: v1.29.3

clusterName: &cluster talos_home_ops
endpoint: https://192.168.64.210:6443
clusterPodNets:
  - "10.69.0.0/16"
clusterSvcNets:
  - "10.96.0.0/16"
additionalApiServerCertSans: &sans
  - "192.168.64.210"
  - 127.0.0.1 # KubePrism
additionalMachineCertSans: *sans
cniConfig:
  name: none

nodes:
  - hostname: "kube-master-msi-1"
    ipAddress: "192.168.64.200"
    installDisk: "/dev/sda"
    talosImageURL: factory.talos.dev/installer/
    controlPlane: true
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "36:35:BA:A0:47:D3"
        dhcp: false
        addresses:
          - "192.168.64.200/19"
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: "192.168.86.1"
        vip:
          ip: "192.168.64.210"
  - hostname: "kube-master-dell-1"
    ipAddress: "192.168.64.204"
    installDisk: "/dev/sda"
    talosImageURL: factory.talos.dev/installer/
    controlPlane: true
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "AE:1A:AA:B3:5C:C0"
        dhcp: false
        addresses:
          - "192.168.64.204/19"
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: "192.168.86.1"
        vip:
          ip: "192.168.64.210"
  - hostname: "kube-master-opti-1"
    ipAddress: "192.168.64.201"
    installDisk: "/dev/sda"
    talosImageURL: factory.talos.dev/installer/
    controlPlane: true
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "BC:24:11:F7:3F:D5"
        dhcp: false
        addresses:
          - "192.168.64.201/19"
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: "192.168.86.1"
        vip:
          ip: "192.168.64.210"
  - hostname: "kube-worker-msi-1"
    ipAddress: "192.168.64.202"
    installDisk: "/dev/sda"
    talosImageURL: factory.talos.dev/installer/
    controlPlane: false
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "22:68:64:9A:A5:B4"
        dhcp: false
        addresses:
          - "192.168.64.202/19"
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: "192.168.86.1"
  - hostname: "kube-worker-dell-1"
    ipAddress: "192.168.64.203"
    installDisk: "/dev/sda"
    talosImageURL: factory.talos.dev/installer/
    controlPlane: false
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "7E:46:B0:2A:C6:79"
        dhcp: false
        addresses:
          - "192.168.64.203/19"
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: "192.168.86.1"
  - hostname: "kube-worker-msi-2"
    ipAddress: "192.168.64.205"
    installDisk: "/dev/sda"
    talosImageURL: factory.talos.dev/installer/
    controlPlane: false
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "C2:6C:E1:33:5F:C6"
        dhcp: false
        addresses:
          - "192.168.64.205/19"
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: "192.168.86.1"
  - hostname: "kube-worker-opti-1"
    ipAddress: "192.168.64.206"
    installDisk: "/dev/sda"
    talosImageURL: factory.talos.dev/installer/
    controlPlane: false
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: "BC:24:11:A8:6A:76"
        dhcp: false
        addresses:
          - "192.168.64.206/19"
        mtu: 1500
        routes:
          - network: 0.0.0.0/0
            gateway: "192.168.86.1"

patches:
  # Configure containerd
  - |-
    machine:
      files:
        - op: create
          path: /etc/cri/conf.d/20-customization.part
          content: |-
            [plugins."io.containerd.grpc.v1.cri"]
              enable_unprivileged_ports = true
              enable_unprivileged_icmp = true
            [plugins."io.containerd.grpc.v1.cri".containerd]
              discard_unpacked_layers = false
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
              discard_unpacked_layers = false

  # Disable search domain everywhere
  - |-
    machine:
      network:
        disableSearchDomain: true

  # Enable cluster discovery
  - |-
    cluster:
      discovery:
        registries:
          kubernetes:
            disabled: false
          service:
            disabled: false

  # Configure kubelet
  - |-
    machine:
      kubelet:
        extraArgs:
          rotate-server-certificates: true
        nodeIP:
          validSubnets: ["192.168.86.0/19"]

  # Force nameserver
  - |-
    machine:
      network:
        nameservers:

  # Configure NTP
  - |-
    machine:
      time:
        disabled: false
        servers: ["time.cloudflare.com"]

  # Custom sysctl settings
  - |-
    machine:
      sysctls:
        fs.inotify.max_queued_events: 65536
        fs.inotify.max_user_watches: 524288
        fs.inotify.max_user_instances: 8192

  # Mount openebs-hostpath in kubelet
  - |-
    machine:
      kubelet:
        extraMounts:
          - destination: /var/openebs/local
            type: bind
            source: /var/openebs/local
            options: ["bind", "rshared", "rw"]



controlPlane:
  patches:
    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnControlPlanes: true
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        proxy:
          disabled: true
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0

    # ETCD configuration
    - |-
      cluster:
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
          advertisedSubnets:
            - "192.168.86.0/19"

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles: ["os:admin"]
            allowedKubernetesNamespaces: ["system-upgrade"]


